// the '_' before the file names mean 'partial' so the compiler will not compile this file.

@use "sass:math";
//--
@use "breakpoints";

$grid-columns: 12;
$grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
);

$layout-values: flex-start, flex-end, center, space-between, space-around;

//base layout classes
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto; //0 bottom auto left and right
  padding: 0 20px;
  box-sizing: border-box;
}

.row {
  display: flex;
  flex-flow: row wrap;
}

//grid gaps
@each $key, $val in $grid-gaps {
  .gap-#{$key} > * {
    //grid-0, grid-1, grid-2, etc
    padding: $val;
  }
  .gap-#{$key} {
    margin-left: -$val;
    margin-right: -$val;
  }
}

//justify content classes
@each $val in $layout-values {
  .justify-#{val} {
    justify-content: $val;
  }
}

//col classes
@include breakpoints.xs {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100, $grid-columns);
    }
  }
}

@include breakpoints.sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100, $grid-columns);
    }
  }
}

@include breakpoints.md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100, $grid-columns);
    }
  }
}

@include breakpoints.lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100, $grid-columns);
    }
  }
}
